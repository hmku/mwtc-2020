# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import competitor_registry_pb2 as competitor__registry__pb2
from . import data_feed_pb2 as data__feed__pb2
from . import order_book_pb2 as order__book__pb2


class ExchangeServiceStub(object):
  """The gRPC Service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterCompetitor = channel.unary_unary(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/RegisterCompetitor',
        request_serializer=competitor__registry__pb2.RegisterCompetitorRequest.SerializeToString,
        response_deserializer=competitor__registry__pb2.RegisterCompetitorResponse.FromString,
        )
    self.StreamExchangeUpdates = channel.unary_stream(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/StreamExchangeUpdates',
        request_serializer=data__feed__pb2.StreamExchangeUpdatesRequest.SerializeToString,
        response_deserializer=data__feed__pb2.ExchangeUpdate.FromString,
        )
    self.AwaitCaseStart = channel.unary_unary(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/AwaitCaseStart',
        request_serializer=competitor__registry__pb2.AwaitCaseStartRequest.SerializeToString,
        response_deserializer=competitor__registry__pb2.AwaitCaseStartResponse.FromString,
        )
    self.PlaceOrder = channel.unary_unary(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/PlaceOrder',
        request_serializer=order__book__pb2.PlaceOrderRequest.SerializeToString,
        response_deserializer=order__book__pb2.PlaceOrderResponse.FromString,
        )
    self.ModifyOrder = channel.unary_unary(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/ModifyOrder',
        request_serializer=order__book__pb2.ModifyOrderRequest.SerializeToString,
        response_deserializer=order__book__pb2.ModifyOrderResponse.FromString,
        )
    self.CancelOrder = channel.unary_unary(
        '/edu.uchicago.midwesttrading.xchange.ExchangeService/CancelOrder',
        request_serializer=order__book__pb2.CancelOrderRequest.SerializeToString,
        response_deserializer=order__book__pb2.CancelOrderResponse.FromString,
        )


class ExchangeServiceServicer(object):
  """The gRPC Service
  """

  def RegisterCompetitor(self, request, context):
    """Register a competitor
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamExchangeUpdates(self, request, context):
    """Request a stream of exchange updates, specifying what kinds of updates to include
    N.B. only one of these streams may be open at a time, and they may only be opened for a competitor who has registered
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AwaitCaseStart(self, request, context):
    """Wait for a case to start
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PlaceOrder(self, request, context):
    """Place an order
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyOrder(self, request, context):
    """Modify an order
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelOrder(self, request, context):
    """Cancel an order
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExchangeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterCompetitor': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterCompetitor,
          request_deserializer=competitor__registry__pb2.RegisterCompetitorRequest.FromString,
          response_serializer=competitor__registry__pb2.RegisterCompetitorResponse.SerializeToString,
      ),
      'StreamExchangeUpdates': grpc.unary_stream_rpc_method_handler(
          servicer.StreamExchangeUpdates,
          request_deserializer=data__feed__pb2.StreamExchangeUpdatesRequest.FromString,
          response_serializer=data__feed__pb2.ExchangeUpdate.SerializeToString,
      ),
      'AwaitCaseStart': grpc.unary_unary_rpc_method_handler(
          servicer.AwaitCaseStart,
          request_deserializer=competitor__registry__pb2.AwaitCaseStartRequest.FromString,
          response_serializer=competitor__registry__pb2.AwaitCaseStartResponse.SerializeToString,
      ),
      'PlaceOrder': grpc.unary_unary_rpc_method_handler(
          servicer.PlaceOrder,
          request_deserializer=order__book__pb2.PlaceOrderRequest.FromString,
          response_serializer=order__book__pb2.PlaceOrderResponse.SerializeToString,
      ),
      'ModifyOrder': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyOrder,
          request_deserializer=order__book__pb2.ModifyOrderRequest.FromString,
          response_serializer=order__book__pb2.ModifyOrderResponse.SerializeToString,
      ),
      'CancelOrder': grpc.unary_unary_rpc_method_handler(
          servicer.CancelOrder,
          request_deserializer=order__book__pb2.CancelOrderRequest.FromString,
          response_serializer=order__book__pb2.CancelOrderResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'edu.uchicago.midwesttrading.xchange.ExchangeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
